<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.feng.myhotel.mapper.UserPOMapper">
  <resultMap id="BaseResultMap" type="com.feng.myhotel.entities.po.UserPO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="login_account" jdbcType="VARCHAR" property="loginAccount" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="total_consumption" jdbcType="INTEGER" property="totalConsumption" />
    <result column="header_picture" jdbcType="VARCHAR" property="headerPicture" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
  </resultMap>
  <resultMap id="userVOBaseResultMap" type="com.feng.myhotel.entities.vo.UserVO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="login_account" jdbcType="VARCHAR" property="loginAccount" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="total_consumption" jdbcType="INTEGER" property="totalConsumption" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <collection property="roleName" ofType="string" column="role_id"
                select="com.feng.myhotel.mapper.RoleMapper.getRoleNameByRoleId"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, gender, name, login_account, password, phone_number, role_id, total_consumption, 
    header_picture, create_date
  </sql>
  <select id="selectUserVOList" resultMap="userVOBaseResultMap">
    select id, gender, name, login_account, phone_number, role_id, total_consumption, create_date
    FROM t_user
  </select>
  <select id="selectByPhoneNumber" resultMap="BaseResultMap">
    select *
    from t_user
    where phone_number = #{phoneNumber}
  </select>
  <select id="selectByLoginAccount" resultMap="BaseResultMap">
    select *
    from t_user
    where login_account = #{loginAccount}
  </select>
  <select id="selectByExample" parameterType="com.feng.myhotel.entities.po.UserPOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteUserByIdList">
    delete from t_user
    where id in (
    <foreach collection="userIdList" item="userId" separator=",">
      #{userId}
    </foreach>
    )
  </delete>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.feng.myhotel.entities.po.UserPOExample">
    delete from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.feng.myhotel.entities.po.UserPO">
    insert into t_user (id, gender, name, 
      login_account, password, phone_number, 
      role_id, total_consumption, header_picture, 
      create_date)
    values (#{id,jdbcType=BIGINT}, #{gender,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{loginAccount,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR}, 
      #{roleId,jdbcType=INTEGER}, #{totalConsumption,jdbcType=INTEGER}, #{headerPicture,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.feng.myhotel.entities.po.UserPO">
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="loginAccount != null">
        login_account,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="phoneNumber != null">
        phone_number,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="totalConsumption != null">
        total_consumption,
      </if>
      <if test="headerPicture != null">
        header_picture,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="loginAccount != null">
        #{loginAccount,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="totalConsumption != null">
        #{totalConsumption,jdbcType=INTEGER},
      </if>
      <if test="headerPicture != null">
        #{headerPicture,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.feng.myhotel.entities.po.UserPOExample" resultType="java.lang.Integer">
    select count(*) from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateRoleByUserId">
    update t_user
    set role_id = #{roleId}
    where id = #{userId}
  </update>
  <update id="updateHeaderPictureById">
    update t_user
    set header_picture = #{headerPicture}
    where id = #{id}
  </update>
  <update id="updateByExampleSelective" parameterType="map">
    update t_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.loginAccount != null">
        login_account = #{record.loginAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneNumber != null">
        phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.totalConsumption != null">
        total_consumption = #{record.totalConsumption,jdbcType=INTEGER},
      </if>
      <if test="record.headerPicture != null">
        header_picture = #{record.headerPicture,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_user
    set id = #{record.id,jdbcType=BIGINT},
      gender = #{record.gender,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      login_account = #{record.loginAccount,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
      role_id = #{record.roleId,jdbcType=INTEGER},
      total_consumption = #{record.totalConsumption,jdbcType=INTEGER},
      header_picture = #{record.headerPicture,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.feng.myhotel.entities.po.UserPO">
    update t_user
    <set>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="loginAccount != null">
        login_account = #{loginAccount,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="totalConsumption != null">
        total_consumption = #{totalConsumption,jdbcType=INTEGER},
      </if>
      <if test="headerPicture != null">
        header_picture = #{headerPicture,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.feng.myhotel.entities.po.UserPO">
    update t_user
    set gender = #{gender,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      login_account = #{loginAccount,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER},
      total_consumption = #{totalConsumption,jdbcType=INTEGER},
      header_picture = #{headerPicture,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>